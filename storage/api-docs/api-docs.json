{
    "openapi": "3.0.0",
    "info": {
        "title": "API TourTrip documentation",
        "description": "Система API для работы с приложением TourTravel",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "khristoforov-i@mail.ru"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api/v1",
            "description": "Локальный сервер API для запросов v1"
        },
        {
            "url": "https://hackaton-yakse.ru/api/v1",
            "description": "Продакшн сервер API для запросов v1"
        },
        {
            "url": "http://127.0.0.1:8000/api/v2",
            "description": "Локальный Сервер API для запросов v2"
        }
    ],
    "paths": {
        "/bases": {
            "get": {
                "tags": [
                    "Base"
                ],
                "summary": "Получение список всех баз",
                "operationId": "basesAll",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Номер страницы",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Все прошло хорошо"
                    }
                }
            },
            "post": {
                "tags": [
                    "Base"
                ],
                "summary": "Создание новой базы",
                "operationId": "basesCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasesStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Все прошло хорошо",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка создания на стороне сервера"
                    }
                },
                "security": []
            }
        },
        "/bases/{id}": {
            "get": {
                "tags": [
                    "Base"
                ],
                "summary": "Получение базы по id",
                "operationId": "baseId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID базы",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Все прошло хорошо"
                    },
                    "404": {
                        "description": "Данные не обнаружены"
                    }
                }
            },
            "put": {
                "tags": [
                    "Base"
                ],
                "summary": "Обновление базы по id",
                "operationId": "baseUpdateId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID базы",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasesUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Все прошло хорошо"
                    },
                    "422": {
                        "description": "Нет никакого тела запроса"
                    },
                    "404": {
                        "description": "База не найдена"
                    },
                    "500": {
                        "description": "Ошибка обновления на стороне сервера"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Base"
                ],
                "summary": "Удаление базы по id",
                "operationId": "baseDeleteId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID базы",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Все прошло хорошо"
                    },
                    "404": {
                        "description": "База не найдена"
                    }
                }
            }
        },
        "/services/{id}/bonuses": {
            "get": {
                "tags": [
                    "Bonus"
                ],
                "summary": "Получение списка всех бонусов у услуги",
                "operationId": "bonusesServicesAll",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID услуги",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Все прошло хорошо"
                    },
                    "404": {
                        "description": "Услуга не найдена"
                    }
                }
            }
        },
        "/bonuses": {
            "post": {
                "tags": [
                    "Bonus"
                ],
                "summary": "Создание нового бонуса для услуги",
                "operationId": "bonusesCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BonusesStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Все прошло хорошо",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка создания на стороне сервера"
                    },
                    "404": {
                        "description": "Услуга не найдена"
                    }
                },
                "security": []
            }
        },
        "/bonuses/{id}": {
            "get": {
                "tags": [
                    "Bonus"
                ],
                "summary": "Получение бонуса по id",
                "operationId": "bonusesId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID бонуса",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Все прошло хорошо"
                    },
                    "404": {
                        "description": "Данные не обнаружены"
                    }
                }
            },
            "put": {
                "tags": [
                    "Bonus"
                ],
                "summary": "Обновление бонуса по id",
                "operationId": "bonusesUpdateId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID бонуса",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BonusesUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Все прошло хорошо"
                    },
                    "422": {
                        "description": "Нет никакого тела запроса"
                    },
                    "404": {
                        "description": "Бонус не найден"
                    },
                    "500": {
                        "description": "Ошибка обновления на стороне сервера"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bonus"
                ],
                "summary": "Удаление бонуса по id",
                "operationId": "bonusesDeleteId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID бонуса",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Все прошло хорошо"
                    },
                    "404": {
                        "description": "База не найдена"
                    }
                }
            }
        },
        "/bases/{id}/services": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Получение списка всех услуг базы",
                "operationId": "servicesBaseAll",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID базы",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Все прошло хорошо"
                    },
                    "404": {
                        "description": "База не найдена"
                    }
                }
            }
        },
        "/services": {
            "post": {
                "tags": [
                    "Service"
                ],
                "summary": "Создание новой услуги для базы",
                "operationId": "servicesCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServicesStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Все прошло хорошо",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка создания на стороне сервера"
                    },
                    "404": {
                        "description": "База не найдена"
                    }
                },
                "security": []
            }
        },
        "/services/{id}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Получение услуги по id",
                "operationId": "servicesId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID услуги",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Все прошло хорошо"
                    },
                    "404": {
                        "description": "Данные не обнаружены"
                    }
                }
            },
            "put": {
                "tags": [
                    "Service"
                ],
                "summary": "Обновление услуги по id",
                "operationId": "servicesUpdateId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID услуги",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServicesUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Все прошло хорошо"
                    },
                    "422": {
                        "description": "Нет никакого тела запроса"
                    },
                    "404": {
                        "description": "Услуга не найдена"
                    },
                    "500": {
                        "description": "Ошибка обновления на стороне сервера"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Service"
                ],
                "summary": "Удаление услуги по id",
                "operationId": "serviceDeleteId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID услуги",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Все прошло хорошо"
                    },
                    "404": {
                        "description": "База не найдена"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BasesStoreRequest": {
                "title": "Пример запроса для создания",
                "description": "Пример простого запроса для создания базы",
                "properties": {
                    "title": {
                        "title": "Name",
                        "description": "Название базы",
                        "type": "string",
                        "format": "string",
                        "example": "Ааарт"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Описание базы",
                        "type": "string",
                        "format": "string",
                        "example": "Парк для всех семьи"
                    },
                    "longitude": {
                        "title": "Longitude",
                        "description": "Долгота базы",
                        "type": "string",
                        "format": "string",
                        "example": "129.675476"
                    },
                    "latitude": {
                        "title": "Latitude",
                        "description": "Ширина базы",
                        "type": "string",
                        "format": "string",
                        "example": "62.035454"
                    }
                },
                "type": "object"
            },
            "BasesUpdateRequest": {
                "title": "Пример запроса для обновления какой-то базы",
                "description": "Пример простого запроса для обновления одной базы",
                "properties": {
                    "title": {
                        "title": "Name",
                        "description": "Название базы",
                        "type": "string",
                        "format": "string",
                        "example": "Ааарт"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Описание базы",
                        "type": "string",
                        "format": "string",
                        "example": "Парк для всех семьи"
                    },
                    "longitude": {
                        "title": "Longitude",
                        "description": "Долгота базы",
                        "type": "string",
                        "format": "string",
                        "example": "129.675476"
                    },
                    "latitude": {
                        "title": "Latitude",
                        "description": "Ширина базы",
                        "type": "string",
                        "format": "string",
                        "example": "62.035454"
                    }
                },
                "type": "object"
            },
            "BonusesStoreRequest": {
                "title": "Пример запроса для создания",
                "description": "Пример простого запроса создания бонуса для услуги",
                "properties": {
                    "item_id": {
                        "title": "ItemId",
                        "description": "Идентификатор услуги",
                        "type": "integer",
                        "format": "int64",
                        "example": "2"
                    },
                    "type": {
                        "title": "Type",
                        "description": "Тип услуги (0 - для постоянных, 1 - при 'нарнии')",
                        "type": "integer",
                        "format": "int32",
                        "example": "0"
                    },
                    "count": {
                        "title": "Count",
                        "description": "Количество получаемых бонусов",
                        "type": "integer",
                        "format": "int64",
                        "example": "1234"
                    }
                },
                "type": "object"
            },
            "BonusesUpdateRequest": {
                "title": "Пример запроса для обноеления",
                "description": "Пример простого запроса обноеления бонуса для услуги",
                "properties": {
                    "item_id": {
                        "title": "ItemId",
                        "description": "Идентификатор услуги",
                        "type": "integer",
                        "format": "int64",
                        "example": "2"
                    },
                    "type": {
                        "title": "Type",
                        "description": "Тип услуги (0 - для постоянных, 1 - при 'нарнии')",
                        "type": "integer",
                        "format": "int32",
                        "example": "0"
                    },
                    "count": {
                        "title": "Count",
                        "description": "Количество получаемых бонусов",
                        "type": "integer",
                        "format": "int64",
                        "example": "1234"
                    }
                },
                "type": "object"
            },
            "ServicesStoreRequest": {
                "title": "Пример запроса для создания",
                "description": "Пример простого запроса для услуги для базы",
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "Название услуги",
                        "type": "string",
                        "format": "string",
                        "example": "Ночека в двухэтажном доме"
                    },
                    "countPeople": {
                        "title": "CountPeople",
                        "description": "Количество доступных мест",
                        "type": "integer",
                        "format": "int32",
                        "example": "2"
                    },
                    "price": {
                        "title": "Price",
                        "description": "Количество доступных мест",
                        "type": "number",
                        "format": "float",
                        "example": "3456.23"
                    },
                    "base_id": {
                        "title": "BaseId",
                        "description": "Идентификатор базы",
                        "type": "integer",
                        "format": "int64",
                        "example": "2"
                    }
                },
                "type": "object"
            },
            "ServicesUpdateRequest": {
                "title": "Пример запроса для обновления какой-то услуги",
                "description": "Пример простого запроса для обновления услуги для базы",
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "Название услуги",
                        "type": "string",
                        "format": "string",
                        "example": "Ночека в двухэтажном доме"
                    },
                    "countPeople": {
                        "title": "CountPeople",
                        "description": "Количество доступных мест",
                        "type": "integer",
                        "format": "int32",
                        "example": "2"
                    },
                    "price": {
                        "title": "Price",
                        "description": "Количество доступных мест",
                        "type": "number",
                        "format": "float",
                        "example": "3456.23"
                    },
                    "base_id": {
                        "title": "BaseId",
                        "description": "Идентификатор базы",
                        "type": "integer",
                        "format": "int64",
                        "example": "2"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "token",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Base",
            "description": "Работа с данными о тур базах"
        },
        {
            "name": "Service",
            "description": "Работа с данными об услугах тур базы"
        },
        {
            "name": "Bonus",
            "description": "Работа с данными о бонусах за услуги"
        }
    ]
}